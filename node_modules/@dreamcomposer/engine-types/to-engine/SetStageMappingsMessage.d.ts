import { ToEngineMessage } from "../post-messages";

export interface StageMapping {
  /**
   * The layer texture mapping
   *
   * If not provided only the surface material is visible by defaulting to `{x: -1, y: -1, width: 1, height: 1}`.
   */
  uvMapping?: {
    /**
     * The x position where the mapping begings.
     *
     * This is not a pixel value but a percentage (i.e., a value between `0`
     * and `1`).
     */
    x: number;
    /**
     * The y position where the mapping begings.
     *
     * This is not a pixel value but a percentage (i.e., a value between `0`
     * and `1`).
     */
    y: number;
    /**
     * The with of the mapping.
     *
     * This is not a pixel value but a percentage (i.e., a value between `0`
     * and `1`).
     */
    width: number;
    /**
     * The height of the mapping.
     *
     * This is not a pixel value but a percentage (i.e., a value between `0`
     * and `1`).
     */
    height: number;
  };
  /**
   * The rotation of the mapping in degrees.
   *
   * Defaults to `0`.
   */
  rotation?: 0 | 90 | 180 | 270;
  /**
   * Defines if the stage should be visible or not.
   *
   * Defaults to `true`.
   */
  visible?: boolean;
  /**
   * Defines a sub area of the target geometry, where the stage will be displayed
   *
   * If no subMeshUVArea is defined, the whole area is used.
   */
  subMeshUVArea?: {
    /**
     * The x position where the target uv box begins.
     *
     * This is not a pixel value but a percentage (i.e., a value between `0`
     * and `1`).
     */
    x: number;
    /**
     * The y position where the target uv box begins.
     *
     * This is not a pixel value but a percentage (i.e., a value between `0`
     * and `1`).
     */
    y: number;
    /**
     * The width of target uv box
     *
     * This is not a pixel value but a percentage (i.e., a value between `0`
     * and `1`).
     */
    width: number;
    /**
     * The height of target uv box
     *
     * This is not a pixel value but a percentage (i.e., a value between `0`
     * and `1`).
     */
    height: number;
  };
}

export interface StageMappings {
  /**
   * The name of the stage is the key and defined in the SetGeometryMessage.
   */
  [stageName: string]: StageMapping;
}

/**
 * A message to set the stage mappings (i.e., how a texture is mapped to the
 * geometry).
 */
export interface SetStageMappingsMessage
  extends ToEngineMessage<"set-stage-mappings"> {
  payload: StageMappings;
}
