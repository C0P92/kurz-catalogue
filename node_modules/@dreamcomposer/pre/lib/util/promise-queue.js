/**
 * @internal
 */
export const waitingQueue = new Map();
/**
 * Ensures that promises in the queue are executed in the correct order and
 * that the next promise is only started when the previous one has finished.
 *
 * @internal
 */
export async function putInQueue(key, promise) {
    if (!waitingQueue.has(key)) {
        waitingQueue.set(key, []);
    }
    const list = waitingQueue.get(key);
    const p = new Promise((resolve) => {
        Promise.all([...list])
            .then(promise)
            .then(() => {
            resolve();
            list.splice(list.indexOf(p), 1);
        });
    });
    list.push(p);
    return p;
}
