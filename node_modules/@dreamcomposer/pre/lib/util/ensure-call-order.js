import { putInQueue } from "./promise-queue.js";
/**
 * Wraps a function and ensures that successive calls to the returned function
 * are executed in order (i.e. only when the previous call has finished).
 *
 * @param method The function to wrap.
 * @returns The wrapped function.
 */
// eslint-disable-next-line @typescript-eslint/ban-types
export function ensureCallOrder(method) {
    const id = Math.random().toString(36).substring(2); // Randomly generated id to identify this method.
    // See https://kurzdigital.atlassian.net/browse/KDC-892 for more information.
    const t = (dcController, ...args) => {
        return putInQueue(`${dcController.id}|${id}`, async () => {
            return method(dcController, ...args);
        });
    };
    return t;
}
