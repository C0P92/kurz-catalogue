import { DcController } from "../DcController.js";
import { TextureBlob, TextureUrl } from "./layers.js";
/**
 * Sets the background color of the player.
 *
 * @param dcController The DcController object obtained from the init function.
 * @param colorHex The color in HEX format, optionally with alpha (e.g.,
 *                 #FF0000FF).
 * @returns A promise that resolves when the background color has been set.
 */
export declare function setBackgroundColor(dcController: DcController, colorHex: string): Promise<void>;
/**
 * Sets a static background image.
 *
 * If the environment is visible the background image can't be seen.
 * If the image contains transparency, the background color will be visible through the transparent parts.
 *
 * @param dcController The DcController object obtained from the init function.
 * @param texture The image to be displayed as the background. If `null` the background image will be removed.
 * @param scalingMode Defines how the image is scaled to fit the screen.
 *
 * @returns A promise that resolves when the background image has been set.
 */
export declare function setBackgroundImage(dcController: DcController, 
/**
 * Sets the background image of the scene.
 * If the texture is `null` it will remove the background image.
 *
 * For non PNG images the file format must be specified either in the URL
 * itself or via a TextureUrl and TextureUrlCollection object
 */
texture: string | TextureUrl | Blob | TextureBlob | null, options?: {
    scalingMode?: "stretch" | "fill" | "fit";
}): Promise<void>;
/**
 * Removes the background image. If there is no active background image, this
 * function does nothing.
 *
 * @returns A promise that resolves when the background image is removed.
 */
export declare function removeBackgroundImage(dcController: DcController): Promise<void>;
