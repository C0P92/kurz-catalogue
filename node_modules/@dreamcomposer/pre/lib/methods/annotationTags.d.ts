import { DcController } from "../DcController.js";
export type TextureCoordinate = {
    /** Normalized x-position. `0` represents the left edge of the image. `1` the right edge */
    x: number;
    /** Normalized y-position. `0` represents teh top edge of the image. `1` the bottom edge */
    y: number;
};
/**
 * Defines a visual object that is attached to the 3D object in the scene with a line.
 * The tag is displayed in the 3D scene and is always facing the camera.
 */
export type AnnotationTag = {
    /**
     * Unique identifier for the annotation tag.
     *
     * If none provided a  new ID is generated. This can be used to identify the tag within the on callback
     */
    id?: string;
    /**
     * Normalized coordinates within the layer texture. The origin is the top left corner of the texture. The bottom right corner is `(1, 1)`.
     *
     * If the coordinates are outside of the texture, or that part of the texture is not mapped to the geometry, the tag will not be displayed.
     */
    textureCoordinates: TextureCoordinate;
    /** The color of the connector lines in HEX format without alpha (e.g., #AD86A3). If `undefined` black is used */
    lineColor?: string;
};
export declare function setAnnotationTags<T extends AnnotationTag>(dcController: DcController, tags: T[], renderLabel: (tag: T, container: HTMLElement) => void | (() => void)): Promise<void>;
