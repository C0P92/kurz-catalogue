/**
 * Sets the state of all skeletons.
 *
 * @param dcController The DcController object obtained from the init function.
 * @param states An array with skeleton states.
 * @returns A promise that resolves when the skeleton have been updated.
 */
export async function setSkeletonStates(dcController, states) {
    const payload = {};
    states.map((state) => {
        var _a;
        const skeletonName = state.skeletonName;
        if (payload[skeletonName]) {
            throw new Error("Skeleton names must be unique.");
        }
        payload[skeletonName] = { boneStates: [] };
        (_a = state.boneStates) === null || _a === void 0 ? void 0 : _a.forEach((boneState) => {
            var _a;
            (_a = payload[skeletonName].boneStates) === null || _a === void 0 ? void 0 : _a.push({
                boneIndex: boneState.index,
                localPosition: boneState === null || boneState === void 0 ? void 0 : boneState.localPosition,
                localRotation: boneState === null || boneState === void 0 ? void 0 : boneState.localRotation,
            });
        });
    });
    return dcController.postMessage({ channel: "set-skeleton-states", payload });
}
