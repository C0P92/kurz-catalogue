import { DcController } from "../DcController.js";
export interface GeometryTransform {
    /**
     * 3D world position of the origin of the object
     * The origin of the object is always the bottom center
     */
    position: [number, number, number];
    /**
     * Euler angles in degree of the of the object.
     * The rotation is around the object center.
     */
    rotation: [number, number, number];
}
/**
 * Rotates and moves the camera position to the desired value.
 *
 * @param dcController The DcController object obtained from the init function.
 * @param changes Target values of the geometry transform. Values that are `undefined` will be ignored.
 * @param transitionDuration Animation duration in seconds. Default is `0`
 * @returns A promise that resolves when the geometry transform has been updated.
 */
export declare function updateGeometryTransform(dcController: DcController, changes: Partial<GeometryTransform>, transitionDuration?: number): Promise<void>;
/**
 * Defines the initial geometry rotation and position.
 *
 * The initial transform is used if the transform is reseted.
 *
 * @param dcController The DcController object obtained from the init function.
 * @param transform Initial values of the geometry transform.
 * @param applyTransform If set to true the transform will also be applied directly.
 * @returns A promise that resolves when the initial geometry transform has been set. Default is `false`
 */
export declare function setInitialGeometryTransform(dcController: DcController, transform: GeometryTransform): Promise<void>;
/**
 * Sets the geometry rotation and position to the initial transform values.
 *
 * If no initial transform was defined `{position: [0,0,0], rotation: [0,0,0]}`
 * is used
 *
 * @param dcController The DcController object obtained from the init function.
 * @param transitionDuration Animation duration in seconds. Default is `0`
 * @returns A promise that resolves when the geometry transform has been updated.
 */
export declare function resetGeometryTransform(dcController: DcController, transitionDuration?: number): Promise<void>;
/**
 * Sets the geometry position so its lowest part is placed perfectly on the ground
 *
 * If no initial transform was defined `{position: [0,0,0], rotation: [0,0,0]}`
 * is used
 *
 * @param dcController The DcController object obtained from the init function.
 * @param transitionDuration Animation duration in seconds. Default is `0`
 * @returns A promise that resolves when the geometry transform has been updated.
 */
export declare function placeGeometryOnGround(dcController: DcController, transitionDuration?: number): Promise<void>;
