import { NativePcmItem, PcmItem } from "./item.js";
export interface PcmPatternEmbossing extends PcmItem {
    /**
     * A unique but human-readable alias of the pattern embossing.
     */
    alias?: string;
    /**
     * A thumbnail for the pattern embossing.
     */
    thumbnailUrl: string;
    /**
     * Overrides for the embossing.
     */
    overrides: unknown;
}
/**
 * @internal The pattern embossing how it is returned by the PCM api.
 */
export interface NativePcmPatternEmbossing extends NativePcmItem {
    alias?: string;
    offset: [number, number];
    overrides: unknown[];
    thumbnailUrl: string;
}
/**
 * Checks if the given object is a PcmPatternEmbossing.
 *
 * @param obj The object to check.
 * @returns True if the object is a PcmPatternEmbossing, false otherwise.
 */
export declare function isPcmPatternEmbossing(obj: unknown): obj is PcmPatternEmbossing;
/**
 * A PcmPatternEmbossing only with the fields that are strictly necessary for
 * rendering.
 */
export type PcmPatternEmbossingDefinition = Required<Pick<PcmPatternEmbossing, "overrides">>;
/**
 * Checks if the given object is a PcmPatternEmbossingDefinition.
 * @param obj The object to check.
 * @returns True if the object is a PcmPatternEmbossingDefinition, false otherwise.
 */
export declare function isPcmPatternEmbossingDefinition(obj: unknown): obj is PcmPatternEmbossingDefinition;
/**
 * Gets a list with all available pattern embossings.
 *
 * @param accessToken The access token.
 * @param baseUrl The base url.
 * @returns A list with all available pattern embossings.
 */
export declare function getPatternEmbossings(accessToken?: string | undefined, baseUrl?: string): Promise<PcmPatternEmbossing[]>;
/**
 * Gets an pattern embossing by its id.
 *
 * Using the id is not filtered (e.g., permissions, deprecations, etc.) and may
 * return elements that are not returned by {@link getPatternEmbossings}.
 *
 * @param id The id of the pattern embossing.
 * @param accessToken The access token.
 * @param baseUrl The base url.
 * @returns The pattern embossing with the given id or undefined if no pattern
 *          embossing with the given id exists.
 */
export declare function getPatternEmbossingById(id: string, accessToken?: string | undefined, baseUrl?: string): Promise<PcmPatternEmbossing | undefined>;
