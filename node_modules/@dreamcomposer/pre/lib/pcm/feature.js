import { getAccessToken } from "../methods/access-token.js";
import { getPcmBaseUrl } from "../methods/base-url.js";
import { isPcmItem, mapNativePcmItemToPcmItem, } from "./item.js";
import { _getPcmItems } from "./util.js";
/**
 * @internal
 * Checks if the given object is a PcmFeature.
 *
 * @param obj The object to check.
 * @returns True if the object is a PcmFeature, false otherwise.
 */
export function isPcmFeature(obj) {
    return isPcmItem(obj) && "flag" in obj;
}
/**
 * @internal
 * Gets a list with all available features.
 *
 * @param accessToken The access token.
 * @param baseUrl The base url.
 * @returns A list with all available features.
 */
export async function getFeatures(accessToken = getAccessToken(), baseUrl = getPcmBaseUrl()) {
    const items = await _getPcmItems("features", accessToken, baseUrl);
    return items.map(mapNativePcmFeatureToLibrary);
}
const mapNativePcmFeatureToLibrary = (feature) => ({
    ...mapNativePcmItemToPcmItem(feature),
    flag: feature.flag,
});
